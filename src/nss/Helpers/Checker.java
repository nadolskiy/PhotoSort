package nss.Helpers;

import java.io.FileInputStream;
import java.io.IOException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;

/***********************************************************************************************************************
 * 10000000101111111110111111111 * Author: Sergei Nadolskiy       **************************************************** *
 * 10100000101000000010100000001 * @mail:  s.nadolskiy@gmail.com  **************************************************** *
 * 10010000101000000000100000000 * skype:  s.nadolskiy            **************************************************** *
 * 10001000101111111110111111111 ************************************************************************************* *
 * 10000100100000000010000000001 ************************************************************************************* *
 * 10000010101000000010100000001 * Project Name: PSMini   ************************************************************ *
 * 10000000101111111110111111111 **************************************************************** зроблено в Україні * *
 **********************************************************************************************************************/
public class Checker {

    private final ArrayList<String> md5List = new ArrayList<>();                          // масив з md5-хешоми зображень

    /*******************************************************************************************************************
     * Перевірка файлу на відносність до зображень ******************************************************************* *
     * *************************************************************************************************************** *
     * @param filePath шлях до файлу   ******************************************************************************* *
     * @return 0 - це не зображення    ******************************************************************************* *
     *         1 - це зображення       ******************************************************************************* *
     *         2 - це зображення (jpg) ******************************************************************************* *
     * ****************************************************************************************************************/
    public static int fileIsImage(String filePath) {
        String fileFormat = Files.getFileType(filePath).toLowerCase();                  // отримуємо розширення файлу
        switch (fileFormat) {
            // якщо розширення файлу таке саме як одне з:
            case "nef":
            case "cr2":
            case "psd":
            case "tif":
            case "png":
            case "gif":
            case "orf":
            case "arw":
            case "rw2":
            case "bmp":
                return 1;                                                                   // вертаємо 1 (зображення)

            // або якщо розширення файлу таке як:
            case "jpg":
            case "jpeg":
                return 2;                                                                   // вертаємо 2 (зображення)

            // інакше (не таке як треба)
            default:
                return 0;                                                                   // вертаємо 0 (інший файл)
        }
    }


    /*******************************************************************************************************************
     * Перевірка шляхів до теці з зображеннями та теці для збереження зображень ************************************** *
     * *************************************************************************************************************** *
     * @param sPathToSourceFolder шлях до теці з зображеннями           ********************************************** *
     * @param sPathToTargetFolder шлях до теці для збереження зображень ********************************************** *
     * @return true  - все вірно                                        ********************************************** *
     *         false - не вірно введений шлях                           ********************************************** *
     * ****************************************************************************************************************/
    public static boolean checkSourceAndTargetPath(String sPathToSourceFolder, String sPathToTargetFolder) {
        String sAlertMessages = "";                                               // порожнє повідомлення
        // якщо шлях до теці з зображеннями порожній
        if (sPathToSourceFolder.equals("")) {
            sAlertMessages += Values.CHECK_NO_SOURCE_PATH_FOUND;                  // записуємо зауваження
        // інакше (якщо є якийсь шлях)
        } else {
            // якщо вказаний шлях - не теця
            if (!checkPathToFolder(sPathToSourceFolder).equals(""))
                sAlertMessages += checkPathToFolder(sPathToSourceFolder);         // записуємо зауваження
        }
        // якщо шлях до теці де мають зберігатися зображення порожній
        if (sPathToTargetFolder.equals("")) {
            sAlertMessages += Values.CHECK_NO_TARGET_PATH_FOUND;                  // записуємо зауваження
        // інакше (якщо є якийсь шлях)
        } else {
            // якщо вказаний шлях - не теця
            if (!checkPathToFolder(sPathToTargetFolder).equals("")) {
                sAlertMessages += checkPathToFolder(sPathToTargetFolder);         // записуємо зауваження
            }
        }
        // якщо є зауваження
        if (!sAlertMessages.equals("")) {
            Show.showAlertBox(sAlertMessages);                                    // виводимо вікно з зауваженнями
            return false;                                                         // вертаємо негативний результат
        }
        return true;                                                              // вертаємо позитивний результат
    }

    /*******************************************************************************************************************
     * Перевірка шляху (чи є теця за даним шляхом) ****************************************************************** *
     * *************************************************************************************************************** *
     * @param sPathToFolder шлях до теці ***************************************************************************** *
     * @return повідомлення              ***************************************************************************** *
     ******************************************************************************************************************/
    private static String checkPathToFolder(String sPathToFolder) {
        String message = "";                                                        // повідомлення
        java.io.File file = new java.io.File(sPathToFolder);                        // файл за шляхом
        // якщо файл не існує
        if (!file.exists())
            message += Values.CHECK_NO_DIR_FOUND + sPathToFolder + "\n";            // записуємо зауваження
        // якщо файл не є директорією
        if (!file.isDirectory())
            message += Values.CHECK_NOT_A_DIR + sPathToFolder + "\n";               // записуємо зауваження
        return message;                                                             // вертаємо повідомлення
    }

    /*******************************************************************************************************************
     * Перевірка зображення на унікальність (пошук дублікатів) ******************************************************* *
     * *************************************************************************************************************** *
     * @param pathToFile шлях до зображення   ************************************************************************ *
     * @return true  - оригінальне зображення ************************************************************************ *
     *         false - дублікат               ************************************************************************ *
     ******************************************************************************************************************/
    public boolean checkIsFileADuplicate(String pathToFile) {
        MessageDigest md = null;
        FileInputStream fis;

        byte[] dataBytes = new byte[1024];

        int nRead;

        try {
            md = MessageDigest.getInstance("MD5");
            fis = new FileInputStream(pathToFile);
            while ((nRead = fis.read(dataBytes)) != -1) {
                md.update(dataBytes, 0, nRead);
            }
        } catch (NoSuchAlgorithmException | IOException ignored) {
        }

        byte[] mdBytes = md != null ? md.digest() : new byte[0];
        StringBuilder sb = new StringBuilder();
        for (byte mdByte : mdBytes) {
            sb.append(Integer.toString((mdByte & 0xff) + 0x100, 16).substring(1));
        }

        String md5 = sb.toString();                                            // md5-хєш зображення

        // якщо масив не має записів
        if (md5List.size() == 0) {
            md5List.add(md5);                                                  // заносимо хеш до масиву
            return false;                                                      // вертаємо що це оригінал
        // інакше (масив має записи)
        } else {
            // продивляємося всі записи масиву
            for (String aMd5List : md5List) {
                // якщо такий запис є
                if (aMd5List.equals(md5))
                    return true;                                               // вертаємо що це дублікат
            }
            md5List.add(md5);                                                  // додаємо хєш до масиву
        }
        return false;                                                          // вертаємо що це оригінал
    }
}