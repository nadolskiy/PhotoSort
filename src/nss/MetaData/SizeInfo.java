package nss.MetaData;

import com.drew.metadata.exif.ExifIFD0Directory;
import com.drew.metadata.photoshop.PsdHeaderDirectory;
import nss.Helpers.Values;

import javax.imageio.ImageIO;
import javax.imageio.ImageReader;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.NoSuchElementException;

/***********************************************************************************************************************
 * 10000000101111111110111111111 * Author: Sergei Nadolskiy       **************************************************** *
 * 10100000101000000010100000001 * @mail:  s.nadolskiy@gmail.com  **************************************************** *
 * 10010000101000000000100000000 * skype:  s.nadolskiy            **************************************************** *
 * 10001000101111111110111111111 ************************************************************************************* *
 * 10000100100000000010000000001 ************************************************************************************* *
 * 10000010101000000010100000001 * Project Name: PSMini   ************************************************************ *
 * 10000000101111111110111111111 **************************************************************** зроблено в Україні * *
 **********************************************************************************************************************/
public class SizeInfo {
    private static final int[] iaImageSize = new int[]{                         // масив з порожнім розміром зображення
            Values.NO_IMAGE_SIZE_WIDTH,
            Values.NO_IMAGE_SIZE_HEIGHT };

    /*******************************************************************************************************************
     * Отримуємо  розмір зображення з exifSIFDD директорії *********************************************************** *
     * *************************************************************************************************************** *
     * @param exifSIFDD exifSIFDD директорія ************************************************************************* *
     * @return масив з розміром зображення   ************************************************************************* *
     ******************************************************************************************************************/
    public static int[] getSize(ExifIFD0Directory exifSIFDD) {
        // якщо мета-директорія не порожня
        if (exifSIFDD != null) {
            // якщо дані про розміри наявні
            if (exifSIFDD.getString(256) != null)
                return new int[] {                                              // вертаємо розмір зображення
                        Integer.parseInt(exifSIFDD.getString(256)),             // ширину
                        Integer.parseInt(exifSIFDD.getString(257))};            // висоту
            // інакше (якщо дані про розміри відсутні)
            else
                return iaImageSize;                                             // вертаємо нульовий розмір зображення
        // інакше (якщо мета-директорія порожня)
        } else
            return iaImageSize;                                                 // вертаємо нульовий розмір зображення
    }

    /*******************************************************************************************************************
     * Отримуємо  розмір зображення з psdHeader директорії *********************************************************** *
     * *************************************************************************************************************** *
     * @param psdHeaderDirectory  psdHeader директорія *************************************************************** *
     * @return масив з розміром зображення             *************************************************************** *
     ******************************************************************************************************************/
    public static int[] getSize(PsdHeaderDirectory psdHeaderDirectory) {
        // якщо мета-директорія не порожня
        if (psdHeaderDirectory != null)
            return new int[] {                                                  // вертаємо розмір зображення
                    Integer.parseInt(psdHeaderDirectory.getString(PsdHeaderDirectory.TAG_IMAGE_WIDTH)),
                    Integer.parseInt(psdHeaderDirectory.getString(PsdHeaderDirectory.TAG_IMAGE_HEIGHT))};
        // інакше (якщо мета-директорія порожня)
        else
            return iaImageSize;                                                 // вертаємо нульовий розмір зображення
    }

    /*******************************************************************************************************************
     * Отримуємо розмір зображення за шляхом до зображення *********************************************************** *
     * *************************************************************************************************************** *
     * @param pathToFile шлях до зображення ************************************************************************** *
     * @return масив з розміром зображення  ************************************************************************** *
     ******************************************************************************************************************/
    public static int[] getSize(String pathToFile) {
        // намагаємося прочитати зображення
        try {
            BufferedImage photo = ImageIO.read(new File(pathToFile));           // "читаємо" зображення
            // якщо зображення не пусте
            if (photo != null)
                return new int[] {photo.getWidth(), photo.getHeight()};         // вертаємо розмір зображення
        // якщо трапляється будь яка помилка
        } catch (IOException e) {
            return iaImageSize;                                                 // вертаємо нульовий розмір зображення
        } catch (NullPointerException npe) {
            return iaImageSize;                                                 // вертаємо нульовий розмір зображення
        } catch (OutOfMemoryError oome) {
            return iaImageSize;                                                 // вертаємо нульовий розмір зображення
        }

        return iaImageSize;                                                     // вертаємо нульовий розмір зображення
    }

    /*******************************************************************************************************************
     * Отримуємо розмір зображення з зображення ********************************************************************** *
     * *************************************************************************************************************** *
     * @param image зображення              ************************************************************************** *
     * @return масив з розміром зображення ************************************************************************** *
     ******************************************************************************************************************/
    public static int[] getSize(File image) {
        // намагаємося прочитати зображення
        try {
            ImageReader reader = ImageIO.getImageReaders(image).next();
            reader.setInput(ImageIO.createImageInputStream(image));
            return new int[] { reader.getWidth(0), reader.getHeight(0)};        // вертаємо розмір зображення
        // якщо трапляється будь яка помилка
        } catch (IOException e ) {
            return iaImageSize;                                                 // вертаємо нульовий розмір зображення
        } catch (NoSuchElementException e) {
            return iaImageSize;                                                 // вертаємо нульовий розмір зображення
        }
    }
}